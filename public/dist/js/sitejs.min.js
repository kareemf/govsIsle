"use strict";function initCall(){console.log("Google maps api initialized."),angular.bootstrap(document.getElementById("map"),["app"])}var controllers=angular.module("app.controllers",[]),services=angular.module("app.services",[]),filter=angular.module("app.filter",[]),app=angular.module("app",["app.controllers","app.services","app.filter","ngResource","angularFileUpload","ui.router","ui.map"]);app.config(["$stateProvider","$urlRouterProvider","$sceDelegateProvider",function($stateProvider,$urlRouterProvider,$sceDelegateProvider){$stateProvider.state("/",{url:"/",templateUrl:"templates/landing.html"}),$stateProvider.state("home",{url:"/home?view",templateUrl:"templates/home/home.html"}).state("home.map",{templateUrl:"templates/home/map.html"}).state("home.list",{templateUrl:"templates/home/list.html"}),$stateProvider.state("login",{url:"/login",templateUrl:"templates/auth/login.html"}).state("logout",{url:"/logout",templateUrl:"templates/auth/logout.html",controller:"LogoutController"}).state("register",{url:"/register",templateUrl:"templates/auth/register.html"}),$stateProvider.state("about",{url:"/about",templateUrl:"templates/info/about.html"}).state("contact",{url:"/contact",templateUrl:"templates/info/contact.html"}).state("history",{url:"/history",templateUrl:"templates/info/history.html"}).state("faqs",{url:"/faqs",templateUrl:"templates/info/faqs.html"}).state("ferry",{url:"/ferry",templateUrl:"templates/info/ferry.html"}),$stateProvider.state("events",{url:"/events?view",templateUrl:"templates/events/events.html"}).state("events.map",{url:"/map",templateUrl:"templates/events/eventmap.html"}).state("events.list",{url:"/list",templateUrl:"templates/events/eventlist.html"}).state("events.grid",{url:"/grid",templateUrl:"templates/events/eventgrid.html"}).state("events.events",{url:"/events",templateUrl:"templates/events/events.html"}).state("events.detail",{url:"/{slug}",templateUrl:"templates/events/event.html"}),$stateProvider.state("amenityDetail",{url:"/amenities/{slug}",templateUrl:"templates/amenities/amenity.html"}),$stateProvider.state("tours",{url:"/tours",templateUrl:"templates/tours/tours.html"}),$stateProvider.state("tourlist",{url:"/tourlist/{id}",templateUrl:"templates/tours/tour.html"}),$stateProvider.state("tourpoint",{url:"/tourpoint/{id}",templateUrl:"templates/tours/tourpoint.html"}),$urlRouterProvider.otherwise("/"),$sceDelegateProvider.resourceUrlWhitelist(["self","http://www.entangledspace.com/**"])}]),services.factory("Alerts",["$resource",function($resource){var alertUrl="api/v1/alerts/:alertId";return $resource(alertUrl,{alertId:"@id"},{update:{method:"PUT"},getBySlug:{url:alertUrl+"/slug/:slug",method:"GET"}})}]);var services=angular.module("app.services");services.factory("Amenities",["$resource",function($resource){var amenityUrl="api/v1/amenities/:amenityId";return $resource(amenityUrl,{amenityId:"@id"},{update:{method:"PUT"},getBySlug:{url:amenityUrl+"/slug/:slug",method:"GET"}})}]);var services=angular.module("app.services");services.factory("Events",["$resource",function($resource){var eventUrl="api/v1/events/:eventId";return $resource(eventUrl,{eventId:"@id"},{update:{method:"PUT"},getBySlug:{url:eventUrl+"/slug/:slug",method:"GET"}})}]);var services=angular.module("app.services");services.factory("Geocoder",["$q",function($q){var geocoder=new google.maps.Geocoder,southWest=new google.maps.LatLng(40.68391889999999,-74.02667689999998),northEast=new google.maps.LatLng(40.69379199999999,-74.01198210000001),bounds=new google.maps.LatLngBounds(southWest,northEast),request={bounds:bounds},exec=function(request,deferred){geocoder.geocode(request,function(results,status){console.log("geocoder results",results,"status",status),deferred.resolve({results:results,status:status})})};return{lookup:function(location){var deferred=$q.defer();return request.address=location,exec(request,deferred),deferred.promise},reverseLookup:function(geoLocation){var deferred=$q.defer();return request.location=new google.maps.LatLng(geoLocation[0],geoLocation[1]),exec(request,deferred),deferred.promise}}}]);var services=angular.module("app.services");services.factory("Menus",["$resource",function($resource){return $resource("admin/menu/:name",{name:"@name",defaultMenu:"@defaultMenu"})}]),services.factory("Global",[function(){var _this=this;return _this._data={user:window.user,authenticated:!1,isAdmin:!1},window.user&&window.user.roles&&(_this._data.authenticated=window.user.roles.length,_this._data.isAdmin=~window.user.roles.indexOf("admin")),_this._data}]);var services=angular.module("app.services");services.factory("Shared",[function(){var self=this;return self.data={getMarkerGeoLocation:function(marker){var position=marker.position;return[position.k,position.A||position.B]}},self.data}]),services.factory("NavService",function($rootScope){var activelink=null;return{updateBtn:function(newval){activelink=newval,$rootScope.$broadcast("XChanged",activelink)},getBtn:function(){return activelink},getHiddenBtn:function(){return 2===activelink||3===activelink||4===activelink||6===activelink?!0:!1}}}),services.factory("SiteData",function($rootScope){var subEvents=[{id:1,name:"Discover",type:"active",visibility:"public",activeBtn:2,link:"events.grid",media:"images/landing/Thumb_discover_320x250.jpg"},{id:2,name:"Eat",type:"active",visibility:"public",activeBtn:3,link:"home",media:"images/landing/Thumb_eat_320x250.jpg"},{id:3,name:"Enjoy",type:"active",visibility:"public",activeBtn:3,link:"home",media:"images/landing/Thumb_enjoy_320x250.jpg"},{id:4,name:"Learn",type:"active",visibility:"public",activeBtn:4,link:"tours",media:"images/landing/Thumb_learn_320x250.jpg"}];return{updateSiteData:function(){$rootScope.$broadcast("YChanged",activelink)},getEvents:function(){return events},getSubEvents:function(){return subEvents}}});var filters=angular.module("app.filter");filters.filter("trustedHtml",["$sce",function($sce){return function(text){return $sce.trustAsHtml(text)}}]),filters.filter("SelecteByType",["SiteData",function(SiteData){return function(type){for(var temp=SiteData.getEvents(),typeArray=[],i=0;i<temp.length;i+=1)temp[i].type===type&&typeArray.push(temp[i]);return typeArray}}]),filters.filter("subSelectByType",["SiteData",function(SiteData){return function(type){for(var temp=SiteData.getSubEvents(),typeArray=[],i=0;i<temp.length;i+=1)temp[i].type===type&&typeArray.push(temp[i]);return typeArray}}]),filters.filter("SelecteByFeatured",["SiteData",function(SiteData){return function(typeOfFeature){for(var temp=SiteData.getEvents(),theArray=[],i=0;i<temp.length;i+=1)temp[i].isFeautred.indexOf(typeOfFeature)>=0&&theArray.push(temp[i]);return theArray}}]),filters.filter("allData",["SiteData",function(SiteData){return SiteData.getEvents()}]);var controllers=angular.module("app.controllers");controllers.controller("BaseAmenityMarkerController",["$scope","$controller","Amenities",function($scope,$controller,Amenities){$controller("BaseEntityController",{$scope:$scope}),$scope.Resource=Amenities,$scope.baseUrl="api/v1/amenities/";var marker=$scope.marker;$scope.saveSuccessCallback=function(amenity){$scope.showForm=!1,$scope.$emit("MARKER_UPDATED_EVENT",{marker:marker,amenity:amenity})},$scope.saveFailureCallback=function(response){console.log("failed to save amenity",response),$scope.error=response.data},$scope.updateSuccessCallback=function(amenity){$scope.showForm=!1,$scope.$emit("MARKER_UPDATED_EVENT",{marker:marker,amenity:amenity})},$scope.updateFailureCallback=function(response){console.log("failed to update amenity",response),$scope.error=response.data}}]),controllers.controller("ExistingAmenityMarkerController",["$scope","$controller","Amenities",function($scope,$controller,Amenities){console.log("in ExistingAmenityController. amenity:",$scope.entity);var amenity=($scope.marker,$scope.entity);$controller("BaseAmenityMarkerController",{$scope:$scope}),$scope.showForm=!1,$scope.isPublished=amenity.published?!0:!1,$scope.cancel=function(amenity,marker){console.log("ExistingAmenityController canceling marker",marker,"amenity",amenity),$scope.amenity=Amenities.get({amenityId:amenity.id}),$scope.showForm=!1},$scope.$watch("showForm",function(newVal,oldVal){if(console.log("ExistingAmenityMarkerController showForm changed",newVal,oldVal),newVal!==oldVal){var marker=$scope.marker,showForm=newVal;marker&&!showForm&&marker.setDraggable(!1)}}),$scope.$on("MARKER_CAN_BE_EDITED_EVENT",function(event,args){if(console.log("responding to MARKER_CAN_BE_EDITED_EVENT in ExistingAmenityMarkerController"),args.entity.id==$scope.entity.id){var marker=args.marker;marker.setDraggable(!0),$scope.showForm=!0,$scope.marker=marker,$scope.$apply()}})}]),controllers.controller("NewAmenityMarkerController",["$scope","$controller","Amenities","Shared",function($scope,$controller,Amenities,Shared){console.log("inside NewAmenityMarkerController",$scope.marker),$controller("BaseAmenityMarkerController",{$scope:$scope});var marker=$scope.marker,getMarkerGeoLocation=Shared.getMarkerGeoLocation;$scope.Resource=Amenities,$scope.showForm=!0,$scope.isPublished=!1,$scope.amenity={name:"",type:"",description:"",specialities:[],location:"",geoLocation:getMarkerGeoLocation(marker)},$scope.options={lookupGeo:!1,lookupLocation:!1},$scope.cancel=function(amenity,marker,markers){console.log("NewAmenityMarkerController canceling marker",marker,"amenity",amenity),marker.setMap(null);for(var i=markers.length-1;i>=0;i--)if(markers[i].__gm_id==marker.__gm_id){markers.splice(i,1);break}},$scope.$emit("NEW_ENTITY_EVENT",{entity:$scope.amenity})}]),controllers.controller("AmenityDetailController",["$scope","$stateParams","Amenities","SiteData",function($scope,$stateParams,Amenities){console.log("in AmenityDetailController");var slug=$stateParams.slug;if(slug){console.log("In AmenityDetailController slug found "+slug);var successCallback=function(amenity){console.log("getBySlug amenity",amenity),$scope.amenity=amenity},failureCallback=function(response){console.log("getBySlug failed",response),$scope.error=response.data};Amenities.getBySlug({slug:slug},successCallback,failureCallback)}}]);var controllers=angular.module("app.controllers");controllers.controller("LoginController",["$scope","$rootScope","$http","$location",function($scope,$rootScope,$http,$location){$scope.user={},$scope.login=function(user){console.log("attempting login for user",user),$http.post("/login",{email:user.email,password:user.password}).success(function(response){console.log("login success. response",response),$scope.loginError="",$scope.isLoggedIn=!0,$rootScope.user=response.user,$rootScope.$emit("loggedin"),response.redirect?window.location.href===response.redirect?window.location.reload():window.location=response.redirect:$location.url("/")}).error(function(){console.log("login failure"),$scope.loginError="Authentication failed."})}}]),controllers.controller("LogoutController",["$scope","$rootScope","$http","$location",function($scope,$rootScope,$http,$location){$http.get("logout").success(function(){console.log("logout success"),$rootScope.user=null,$location.url("/")}).error(function(){console.error("failed to logout")})}]),controllers.controller("RegisterController",["$scope","$rootScope","$http","$location",function($scope,$rootScope,$http,$location){$scope.user={},$scope.register=function(user){$scope.usernameError=null,$scope.registerError=null,$http.post("/register",{email:user.email,password:user.password,confirmPassword:user.confirmPassword,username:user.username,name:user.name}).success(function(){$scope.registerError=0,$rootScope.user=$scope.user,$rootScope.$emit("loggedin"),$location.url("/")}).error(function(error){"Username already taken"===error?$scope.usernameError=error:$scope.registerError=error})}}]),controllers.controller("BaseEntityController",["$scope","$rootScope","$upload",function($scope,$rootScope,$upload){$scope.save=function(entity){console.log("saving Entity",entity),$scope.Resource.save(entity,$scope.saveSuccessCallback,$scope.saveFailureCallback)},$scope.update=function(entity){console.log("updating Entity",entity),$scope.Resource.update(entity,$scope.updateSuccessCallback,$scope.updateFailureCallback)},$scope.togglePublished=function(entity){entity.published?(entity.published=null,entity.publishedBy=null,$scope.isPublished=!1):(entity.published=new Date,entity.pushedBy=$rootScope.user.id,$scope.isPublished=!0)},$scope.coverPhotoUpload=function($files){for(var i=0;i<$files.length;i++){var file=$files[i];$scope.upload=$upload.upload({url:$scope.baseUrl+$scope.entity.id,method:"PUT",file:file,fileFormDataName:"coverPhoto"}).progress(function(evt){console.log("percent: "+parseInt(100*evt.loaded/evt.total))}).success(function(data,status,headers,config){console.log("file upload success",data,status,headers,config)}).error(function(){console.log("file upload faile.")})}}}]);var controllers=angular.module("app.controllers");controllers.controller("BaseEventMarkerController",["$scope","$controller","Events",function($scope,$controller,Events){$controller("BaseEntityController",{$scope:$scope}),$scope.Resource=Events,$scope.baseUrl="api/v1/events/";var marker=$scope.marker;$scope.saveSuccessCallback=function(event){$scope.showForm=!1,$scope.$emit("MARKER_UPDATED_EVENT",{marker:marker,event:event})},$scope.saveFailureCallback=function(response){console.log("failed to save event",response),$scope.error=response.data},$scope.updateSuccessCallback=function(event){$scope.showForm=!1,$scope.$emit("MARKER_UPDATED_EVENT",{marker:marker,event:event})},$scope.updateFailureCallback=function(response){console.log("failed to update event",response),$scope.error=response.data}}]),controllers.controller("NewEventMarkerController",["$scope","$controller",function($scope,$controller){console.log("in NewEventMarkerController",$scope.marker),$controller("BaseEventMarkerController",{$scope:$scope});var marker=$scope.marker,getMarkerGeoLocation=$scope.getMarkerGeoLocation;$scope.event={name:"",type:"event",description:"",visibility:"",setupDateTime:null,startDateTime:null,endDateTime:null,cleanupDateTime:null,isReccuring:!1,anticipatedAttendance:null,location:"",geoLocation:getMarkerGeoLocation(marker)},$scope.options={lookupGeo:!1,lookupLocation:!1},$scope.showForm=!0,$scope.isPublished=event.published?!0:!1,$scope.cancel=function(event,marker,markers){console.log("NewEventMarkerController canceling marker",marker,"event",event),marker.setMap(null);for(var i=markers.length-1;i>=0;i--)if(markers[i].__gm_id==marker.__gm_id){markers.splice(i,1);break}},$scope.$emit("NEW_ENTITY_EVENT",{entity:$scope.event})}]),controllers.controller("ExistingEventMarkerController",["$scope","$controller","Events",function($scope,$controller,Events){console.log("in ExistingEventMarkerController. event:",$scope.entity),$controller("BaseEventMarkerController",{$scope:$scope});var event=$scope.entity;$scope.showForm=!1,$scope.isPublished=event.published?!0:!1,$scope.cancel=function(event,marker){console.log("ExistingEventMarkerController canceling marker",marker,"event",event),$scope.event=Events.get({eventId:event.id}),$scope.showForm=!1},$scope.$watch("showForm",function(newVal,oldVal){if(console.log("ExistingEventMarkerController showForm changed",newVal,oldVal),newVal!==oldVal){var marker=$scope.marker,showForm=newVal;marker&&!showForm&&marker.setDraggable(!1)}}),$scope.$on("MARKER_CAN_BE_EDITED_EVENT",function(event,args){if(console.log("responding to MARKER_CAN_BE_EDITED_EVENT in ExistingEventMarkerController"),args.entity.id==$scope.entity.id){var marker=args.marker;marker.setDraggable(!0),$scope.showForm=!0,$scope.marker=marker,$scope.$apply()}})}]),controllers.controller("EventDetailController",["$scope","$stateParams","Events","SiteData",function($scope,$stateParams,Events){console.log("in EventDetailController");var slug=$stateParams.slug;if(slug){console.log("In EventDetailController slug found "+slug);var successCallback=function(event){console.log("getBySlug event",event),$scope.event=event},failureCallback=function(response){console.log("getBySlug failed",response),$scope.error=response.data};Events.getBySlug({slug:slug},successCallback,failureCallback)}}]),controllers.controller("EventListController",["$scope","$state","$stateParams","Events","$filter",function($scope,$state,$stateParams,Events){console.log("In EventListController"),Events.query(function(events){$scope.eventList=events,$scope.activities=events.filter(function(event){return"activity"===event.type}),$scope.venues=events.filter(function(event){return"venue"===event.type}),$scope.parkServices=events.filter(function(event){return"tour"===event.type}),$scope.specialEvent=events.filter(function(event){return"event"===event.type}),$scope.featured=events.filter(function(event){return event.isFeatured&&event.isFeatured.indexOf("event")>=0})}),console.log("event array "+$scope.specialEvent)}]),controllers.controller("EventMapController",["$scope","$state","$stateParams","Events",function($scope){console.log("In EventListController");var map,mapMinZoom=15,mapMaxZoom=17,mapBounds=new google.maps.LatLngBounds(new google.maps.LatLng(40.682183,-74.027019),new google.maps.LatLng(40.695688,-74.008764)),mapGetTile=function(x,y,z){return"templates/map/"+z+"/"+x+"/"+y+".png"},mapOptions={center:new google.maps.LatLng(40.682183,-74.027019),streetViewControl:!1,panControl:!0,zoom:15,maxZoom:mapMaxZoom,minZoom:mapMinZoom,mapTypeId:google.maps.MapTypeId.HYBRID};$scope.init=function(){map=new google.maps.Map(document.getElementById("eventmap"),mapOptions),map.setMapTypeId(google.maps.MapTypeId.ROADMAP),map.fitBounds(mapBounds);{var maptiler=new klokantech.MapTilerMapType(map,mapGetTile,mapBounds,mapMinZoom,mapMaxZoom);new klokantech.OpacityControl(map,maptiler)}}}]),angular.module("app.controllers").controller("HeaderController",["$scope","$rootScope","Global","Menus","NavService",function($scope,$rootScope,Global,Menus){function queryMenu(name,defaultMenu){Menus.query({name:name,defaultMenu:defaultMenu},function(menu){$scope.menus[name]=menu})}$scope.global=Global,$scope.menus={};var defaultMainMenu=[];queryMenu("main",defaultMainMenu),$scope.isCollapsed=!1,$rootScope.$on("loggedin",function(){$scope.global={authenticated:!!$rootScope.user,user:$rootScope.user}})}]),controllers.controller("NavController",["$scope","$location","$filter","NavService","Shared","Events",function($scope,$location,$filter,NavService,Shared,Events){console.log("In NavController");var path=$location.path(),paths=["/","/about","/events/grid","/events/map","/tours","/ferry","/events/list"];$scope.currentLink=paths.indexOf(path),console.log($scope.currentLink+"link"),$scope.activelink=function(numbtn){NavService.updateBtn(numbtn)},$scope.isActive=function(checkTab){return NavService.getBtn()===checkTab},$scope.buttonswap=function(){return NavService.getHiddenBtn()},$scope.$on("XChanged",function(event,x){$scope.currentLink=x}),Events.query(function(events){$scope.featured=events.filter(function(event){return event.isFeatured&&event.isFeatured.indexOf("main")>=0})}),$scope.subEvents=$filter("subSelectByType")("active"),console.log("testing= "+$scope.subEvents);var allFilters=Shared.allFilters=["info","food","drink","activity","venue","facility","tour","event"];$scope.filters=allFilters,$scope.toggleFilters=function(oneOrMoreFilters){var scopeFilters=$scope.filters,filters=oneOrMoreFilters.split(", ");if(filters.indexOf("all")>=0)scopeFilters=scopeFilters.length?[]:allFilters;else for(var i=filters.length-1;i>=0;i--){var filter=filters[i];scopeFilters.indexOf(filter)>=0?scopeFilters=scopeFilters.filter(function(f){return f!=filter}):scopeFilters.push(filter)}$scope.filters=scopeFilters,Shared.filters=scopeFilters},$scope.isFilterActive=function(filter){for(var filters=$scope.filters,i=filters.length-1;i>0;i--)if(filters[i]===filter)return!0;return!1}}]);var controllers=angular.module("app.controllers");controllers.controller("HomeController",["$scope","$state","$stateParams",function($scope,$state,$stateParams){var view=$stateParams.view;view=view?view:"map",$state.go("home."+view)}]),controllers.controller("LandingController",["$scope","$location","NavService",function(){console.log("In LandingController")}]);var controllers=angular.module("app.controllers");controllers.controller("AppController",["$rootScope","$http",function($rootScope,$http){var checkLoggedIn=function(){$http.get("/loggedin").success(function(response){console.log("loggedin check success. response",response),angular.isObject(response)&&response._id&&(console.log("logged in user",response),$rootScope.user=response)}).error(function(){console.log("loggedin check failure")})};checkLoggedIn()}]);var controllers=angular.module("app.controllers");controllers.controller("MapController",["$scope","$rootScope","Shared",function($scope,$rootScope,Shared){console.log("Google maps controller."),$scope.isEditMode=!0,$scope.isAdmin=!1,console.log("$rootScope.user",$rootScope.user);var user=$rootScope.user;user&&user.roles&&user.roles.forEach(function(role){"admin"===role.name&&($scope.isAdmin=!0)});var getMarkerGeoLocation=$scope.getMarkerGeoLocation=Shared.getMarkerGeoLocation,gm=google.maps,shadow=new gm.MarkerImage("https://www.google.com/intl/en_ALL/mapfiles/shadow50.png",new gm.Size(37,34),new gm.Point(0,0),new gm.Point(10,34));$scope.$watch("myMap",function(map){var oms=$scope.oms=new OverlappingMarkerSpiderfier(map);oms.addListener("click",function(marker){$scope.openMarkerInfo(marker,marker.entity)}),oms.addListener("spiderfy",function(markers){for(var i=0;i<markers.length;i++)markers[i].setShadow(null);$scope.myInfoWindow.close()}),oms.addListener("unspiderfy",function(markers){for(var i=0;i<markers.length;i++)markers[i].setShadow(shadow)})}),$scope.mapOptions={center:new google.maps.LatLng(40.6880492,-74.0188415),streetViewControl:!0,panControl:!0,zoom:16,maxZoom:20,minZoom:14,mapTypeId:google.maps.MapTypeId.ROADMAP},$scope.mapEvents={"map-rightclick":"addNewMarker($event, $params)"},$scope.contentTypes=["event","amenity"],$scope.openMarkerInfo=function(marker,entity){console.log("openMarkerInfo marker",marker,"entity",entity),$scope.currentMarker=marker,$scope.currentEvent=entity,$scope.myInfoWindow.open($scope.myMap,marker)},$scope.newMarkers=[],$scope.addNewMarker=function($event,$params){if(console.log("rightclick",$event,$params),!$scope.isEditMode)return void console.log("not isEditMode");if(!$scope.isAdmin)return void console.log("not isAdmin");var marker=new google.maps.Marker({map:$scope.myMap,position:$params[0].latLng,draggable:!0});$scope.oms.addMarker(marker),$scope.newMarkers.push(marker)},$scope.editMarker=function(marker,entity){return console.log("editting marker",marker,"entity",entity),$scope.isAdmin?void $scope.$broadcast("MARKER_CAN_BE_EDITED_EVENT",{marker:marker,entity:entity}):void console.log("not isAdmin")},$scope.updateGeolocationAfterDrag=function(marker,entity){console.log("updating entity position. entiy",entity,"marker",marker);var geoLocation=getMarkerGeoLocation(marker);entity&&(entity.geoLocation=geoLocation)}}]),controllers.controller("MarkerListController",["$scope","$state","$stateParams","Events","Amenities","Shared",function($scope,$state,$stateParams,Events,Amenities,Shared){console.log("in MarkerListController"),$scope.events=[],$scope.existingEventMarkers=[],$scope.amenities=[],$scope.existingAmenityMarkers=[],$scope.markerEvents={"map-click":"openMarkerInfo(marker, entity)","map-rightclick":"editMarker(marker, entity)","map-dragend":"updateGeolocationAfterDrag(marker, entity)"};var determineMarkerIcon=function(entity){var icon;switch(entity.type){default:case"event":icon="http://maps.google.com/mapfiles/ms/icons/red-dot.png",entity.published||(icon="http://maps.google.com/mapfiles/ms/icons/red.png");break;case"food":case"drink":icon="http://maps.google.com/mapfiles/ms/icons/pink-dot.png",entity.published||(icon="http://maps.google.com/mapfiles/ms/icons/pink.png");break;case"info":icon="http://maps.google.com/mapfiles/ms/icons/green-dot.png",entity.published||(icon="http://maps.google.com/mapfiles/ms/icons/green.png");break;case"activity":icon="http://maps.google.com/mapfiles/ms/icons/orange-dot.png",entity.published||(icon="http://maps.google.com/mapfiles/ms/icons/orange.png");break;case"facility":icon="http://maps.google.com/mapfiles/ms/icons/ltblue-dot.png",entity.published||(icon="http://maps.google.com/mapfiles/ms/icons/lightblue.png");break;case"tour":icon="http://maps.google.com/mapfiles/ms/icons/blue-dot.png",entity.published||(icon="http://maps.google.com/mapfiles/ms/icons/blue.png");break;case"venue":icon="http://maps.google.com/mapfiles/ms/icons/purple-dot.png",entity.published||(icon="http://maps.google.com/mapfiles/ms/icons/purple.png")}return icon},createMarker=function(entity,map){var position=new google.maps.LatLng(entity.geoLocation[0],entity.geoLocation[1]),markerOptions={map:map,position:position,draggable:!1},icon=determineMarkerIcon(entity);icon&&(markerOptions.icon=icon);var marker=new google.maps.Marker(markerOptions);return marker.entity=entity,console.log("existing entity",entity,"marker",marker),marker},clearMarkers=function(markers){markers.forEach(function(marker){marker.setMap(null)})},updateMarkerIcon=function(entity,marker,markers){for(var i=markers.length-1;i>=0;i--)if(markers[i]==marker){var icon=determineMarkerIcon(entity);marker.setIcon(icon)}},getContentByFilters=function(filters){console.log("getContentByFilters",filters),clearMarkers($scope.existingEventMarkers),clearMarkers($scope.existingAmenityMarkers),$scope.existingEventMarkers=[],$scope.existingAmenityMarkers=[],filters.indexOf("event")>=0&&(Events.query(function(events){console.log("events",events),events.forEach(function(event){var marker=createMarker(event,$scope.myMap);$scope.oms.addMarker(marker),$scope.existingEventMarkers.push(marker),$scope.events.push(event)})}),filters=filters.filter(function(f){return"event"!=f})),filters.indexOf("tour")>=0&&(filters=filters.filter(function(f){return"tour"!=f})),filters&&filters.length&&Amenities.query({filter:filters},function(amenities){console.log("amenities",amenities),amenities.forEach(function(amenity){var marker=createMarker(amenity,$scope.myMap);$scope.oms.addMarker(marker),$scope.existingAmenityMarkers.push(marker),$scope.amenities.push(amenity)})})};$scope.$watch(function(){return Shared.filters},function(newVal){return newVal?void getContentByFilters(newVal):getContentByFilters(Shared.allFilters)},!0),$scope.$on("MARKER_UPDATED_EVENT",function(event,args){args.event?updateMarkerIcon(args.event,args.marker,$scope.existingEventMarkers):args.amenity&&updateMarkerIcon(args.amenity,args.marker,$scope.existingAmenityMarkers)})}]),controllers.controller("NewMarkerListController",["$scope","$controller",function($scope){console.log("in NewMarkerListController"),$scope.newMarkerEvents={"map-click":"openMarkerInfo(marker, findRelatedEntity(marker))","map-rightclick":"editMarker(marker, findRelatedEntity(marker))","map-dragend":"updateGeolocationAfterDrag(marker, findRelatedEntity(marker))"},$scope.newEntities=[],$scope.$on("NEW_ENTITY_EVENT",function(event,args){console.log("responding to NEW_ENTITY_EVENT. args",args),$scope.newEntities.push(args.entity)}),$scope.findRelatedEntity=function(marker){for(var markers=$scope.newMarkers,entities=$scope.newEntities,i=markers.length-1;i>=0;i--)if(markers[i]==marker)return entities[i];return null}}]),controllers.controller("GeoLocationController",["$scope","Events",function($scope){$scope.geo=function(){var coordinates=function(position){var lat=position.coords.latitude,lon=position.coords.longitude,coords=(position.coords.accuracy,lat+", "+lon);document.getElementById("google_map").setAttribute("src","https://maps.google.com?q="+coords+"&z=18&output=embed")},err=function(error){1===error.code&&alert("please allow us to access your location"),3===error.code&&alert("The browser timeout")};document.getElementById("get_location").onclick=function(){return navigator.geolocation.getCurrentPosition(coordinates,err,{enableHighAccuracy:!0,maximumAge:3e4}),!1}}()}]);var controllers=angular.module("app.controllers");controllers.controller("ToursController",["$scope","$stateParams","$http",function($scope,$stateParams,$http){console.log("in TourController"),$scope.getImageSrc=function(imageFile){return"http://www.entangledspace.com/staging/"+imageFile},$http.get("http://entangledspace.com/staging/getTours.php?username=cultureisland&bl_lat=40.5&bl_lng=-74.1&tr_lat=40.7&tr_lng=-74.0").success(function(data){$scope.allTours=data,$scope.allTourpoints=[];var log=[];angular.forEach($scope.allTours,function(value){$http.get("http://entangledspace.com/staging/getTourpoints.php?username=cultureisland&tourID="+value.id).success(function(data_2){var log2=[];angular.forEach(data_2,function(point){$scope.allTourpoints.push(point)},log2)})},log)}),$http.get("http://entangledspace.com/staging/getTours.php?username=cultureisland").success(function(data){$scope.myTours=data,$scope.myTourpoints=[];var log=[];angular.forEach($scope.myTours,function(value){$http.get("http://entangledspace.com/staging/getTourpoints.php?username=cultureisland&tourID="+value.id).success(function(data_2){var log2=[];angular.forEach(data_2,function(point){$scope.myTourpoints.push(point)},log2)})},log)})}]),controllers.controller("TourpointDetailController",["$scope","$stateParams","$http",function($scope,$stateParams,$http){console.log("in TourpointDetailController"),$scope.getAudioSrc=function(audioFile){return"http://www.entangledspace.com/staging/"+audioFile},$scope.getImageSrc=function(imageFile){return"http://www.entangledspace.com/staging/"+imageFile},$scope.playing=!1,$scope.audio=document.getElementById("audioPlayer"),$scope.play=function(){$scope.audio.play(),$scope.playing=!0},$scope.stop=function(){$scope.audio.pause(),$scope.playing=!1},$scope.audio.addEventListener("ended",function(){$scope.$apply(function(){$scope.stop()})});var id=$stateParams.id;id&&$http.get("http://entangledspace.com/staging/getPost.php?username=cultureisland&postID="+id).success(function(data){$scope.tourpoint=data,$scope.audio.src=$scope.getAudioSrc($scope.tourpoint.clipLoc)})}]),controllers.controller("TourListController",["$scope","$stateParams","$http",function($scope,$stateParams,$http){console.log("in TourListController"),$scope.getImageSrc=function(imageFile){return"http://www.entangledspace.com/staging/"+imageFile};var id=$stateParams.id;id&&($http.get("http://entangledspace.com/staging/getTour.php?username=cultureisland&tourID="+id).success(function(data){$scope.tour=data}),$http.get("http://entangledspace.com/staging/getTourpoints.php?username=cultureisland&tourID="+id).success(function(data){$scope.tourpoints=data}))}]);